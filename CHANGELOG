
rpclib-1.2.1
 * WSDL: A regression with header namespaces was fixed

rpclib-1.2.0
 * The rpc decorator now produces static methods. The methods still get an initial 
   parameter that holds the service contexts. It's an instance of the MethodContext 
   class, and not the DefinitionBase class.
 * The srpc decorator which doesn't force the methods to have an initial context 
   parameter.
 * The following changes to soaplib were ported to rpclib's SOAP/WSDL parts:
    * duration object is now compatible with Python's native timedelta.
    * WSDL: Support for multiple <service> tags in the wsdl (one for each class in the 
      application)
    * WSDL: Support for multiple <portType> tags and multiple ports.
    * WSDL: Support for enumerating exceptions a method can throw was added.
    * SOAP: Exceptions got some love to be more standards-compliant.
    * SOAP: Xml attribute support

soaplib-3.x -> rpclib-1.1.1-alpha
 * Soaplib is now also protocol agnostic. As it now supports protocols (like 
   Rest-minus-the-verbs HttpRpc) other than soap, it's renamed to Rpclib. This 
   also means soaplib can support multiple soap and wsdl versions.
 * Mention of xml and soap removed from public api where it's not directly
   related to soap or xml. (e.g. a hook rename: on_method_exception_xml ->
   on_method_exception_doc)
 * Protocol serializers now return iterables instead of complete messages. This
   lets return values of arbitrary length possible via the use of generators.

soaplib-2.x
 * This release transformed soaplib from a soap server that exclusively supported
   http to a soap serialization/deserialization library that is architecture and
   transport agnostic.
 * Sphinx docs with working examples: http://arskom.github.com/soaplib/2_0/
 * Serializers renamed to Models 
 * Standalone xsd generation for ClassSerializer objects has been added. This 
   allows soaplib to be used to define generic XML schemas, without SOAP 
   artifacts.
 * Annotation Tags for primitive Models has been added.
 * The soaplib client has been re-written after having been dropped from 
   recent releases. It follows the suds API but is based on lxml for better 
   performance. 
   WARNING: the soaplib client is not well-tested and future support is tentative 
   and dependent on community response.
 * 0mq support added. 
 * Twisted supported via WSGI wrappers.
 * Hard dependency on WSGI removed.
 * Increased test coverage for soaplib and supported servers

soaplib-1.0
 * Standards-compliant Soap Faults
 * Allow multiplre return values and return types

soaplib-0.9.4
 * pritimitive.Array -> clazz.Array
 * Support for SimpleType restrictions (pattern, length, etc.)

soaplib-0.9.3
 * Soap header support
 * Tried the WS-I Test first time. Many bug fixes.

soaplib-0.9.2
 * Support for inheritance.

soaplib-0.9.1
 * Support for publishing multiple service classes.

soaplib-0.9
 * Soap server logic almost completely rewritten.
 * Soap client removed in favor of suds.
 * Object definition api no longer needs a class types: under class definition.
 * XML Schema validation is supported.
 * Support for publishing multiple namespaces. (multiple <schema> tags in the wsdl)
 * Support for enumerations.
 * Application and Service Definition are separated. Application is instantiated 
   on server start, and Service Definition is instantiated for each new request.
 * @soapmethod -> @rpc

soaplib-0.8
 * Switched to lxml for proper xml namespace support.
 * In this version, soaplib is a stable soap server not without its glitches
   and quirks
